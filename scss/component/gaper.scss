.gaper {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    box-sizing: border-box;
    margin: -(half-of(_gap("element")));

    > * {
        margin: half-of(_gap("element"));
        flex-shrink: 0;
    }

    > .gap {
        flex: 1;
    }

    &.is-fluid {
        display: flex;
    }

    &.is-stacked {
        flex-direction: column;
        align-items: stretch;

        &-reverse {
            flex-direction: column-reverse;
            align-items: stretch;
        }
    }

    &.is-gap-less {
        margin: 0;
        > * {
            margin: 0;
        }
    }

    @each $label, $gap in _gaps(_var("gaper", "gaps", ())) {
        &.is-#{$label}-gaped {
            margin: -(half-of($gap));

            > * {
                margin: half-of($gap);
            }
        }
    }

    $align-items: stretch, flex-start, flex-end, center, baseline;
    @each $align in $align-items {
        &.is-#{$align}-aligned {
            align-items: $align;
        }
    }

    $justify-content: flex-start, flex-end, center, space-between, space-around,
        space-evenly;
    @each $align in $justify-content {
        &.is-#{$align}-justified {
            justify-content: $align;
        }
    }

    @each $device, $mq in _breakpoints() {
        @media #{$mq} {
            &.is-#{$device}-fluid {
                display: flex !important;
            }

            &.is-#{$device}-stacked {
                flex-direction: column !important;
                align-items: stretch;

                &-reverse {
                    flex-direction: column-reverse !important;
                    align-items: stretch;
                }
            }

            &.is-#{$device}-gap-less {
                margin: 0 !important;
                > * {
                    margin: 0 !important;
                }
            }

            @each $label, $gap in _gaps(_var("gaper", "gaps", ())) {
                &.is-#{$device}-#{$label}-gaped {
                    margin: -(half-of($gap)) !important;

                    > * {
                        margin: half-of($gap) !important;
                    }
                }
            }

            $align-items: stretch, flex-start, flex-end, center, baseline;
            @each $align in $align-items {
                &.is-#{$device}-#{$align}-aligned {
                    align-items: $align !important;
                }
            }

            $justify-content: flex-start, flex-end, center, space-between,
                space-around, space-evenly;
            @each $align in $justify-content {
                &.is-#{$device}-#{$align}-justified {
                    justify-content: $align !important;
                }
            }
        }
    }
}
