.flex {
    display: flex;
    white-space: nowrap;
    flex-wrap: wrap;
    align-items: center;
    flex-direction: row;
    box-sizing: border-box;
    margin: -(half-of(_gap("container")));

    > .break {
        display: block;
        flex-basis: 100%;
        height: 0;
    }

    > .flex-item {
        flex: 1;
        box-sizing: border-box;
        max-width: 100%;
        padding: half-of(_gap("container"));

        &.is-fit {
            flex: none;
        }

        @include tablet() {
            flex-basis: 0;
            flex-grow: 1;
            flex-shrink: 1;
            width: auto;
        }

        @each $label, $unit in _units(_var("flex", "units", ())) {
            &.is-#{$label} {
                flex: none;
                width: $unit;
            }

            @each $device, $mq in _breakpoints() {
                @media #{$mq} {
                    &.is-#{$device}-fit {
                        flex: none;
                    }

                    &.is-#{$device}-#{$label} {
                        flex: none !important;
                        width: $unit !important;
                    }
                }
            }
        }
    }

    &.is-stacked {
        flex-direction: column;
        align-items: stretch;

        &-reverse {
            flex-direction: column-reverse;
            align-items: stretch;
        }
    }

    &.is-gap-less {
        margin: 0;
        > .flex-item {
            padding: 0;
        }
    }

    @each $label, $gap in _gaps(_var("flex", "gaps", ())) {
        &.is-#{$label}-gaped {
            margin: -(half-of($gap));
            > .flex-item {
                padding: half-of($gap);
            }
        }
    }

    $align-items: stretch, flex-start, flex-end, center, baseline;
    @each $align in $align-items {
        &.is-#{$align}-aligned {
            align-items: $align;
        }
    }

    $justify-content: flex-start, flex-end, center, space-between, space-around,
        space-evenly;
    @each $justify in $justify-content {
        &.is-#{$justify}-justified {
            justify-content: $justify;
        }
    }

    @each $device, $mq in _breakpoints() {
        @media #{$mq} {
            &.is-#{$device}-stacked {
                flex-direction: column !important;
                align-items: stretch;

                &-reverse {
                    flex-direction: column-reverse !important;
                    align-items: stretch;
                }
            }

            &.is-#{$device}-gap-less {
                margin: 0 !important;
                > .flex-item {
                    padding: 0 !important;
                }
            }

            @each $label, $gap in _gaps(_var("flex", "gaps", ())) {
                &.is-#{$device}-#{$label}-gaped {
                    margin: -(half-of($gap)) !important;
                    > .flex-item {
                        padding: half-of($gap) !important;
                    }
                }
            }

            $align-items: stretch, flex-start, flex-end, center, baseline;
            @each $align in $align-items {
                &.is-#{$device}-#{$align}-aligned {
                    align-items: $align !important;
                }
            }

            $justify-content: flex-start, flex-end, center, space-between,
                space-around, space-evenly;
            @each $justify in $justify-content {
                &.is-#{$device}-#{$justify}-justified {
                    justify-content: $justify !important;
                }
            }
        }
    }
}
