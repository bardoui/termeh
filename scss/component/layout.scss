// @todo fix ios overflow
.layout {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
    align-items: stretch;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
    filter: grayscale(0%);
    transition: filter _var("transition", "duration") _var("transition", "ease");

    > :not(.content):not(.layout) {
        flex: none;
        box-sizing: border-box;
        max-width: 100%;
    }

    > .layout {
        flex: 1;
    }

    &.is-reverse {
        flex-direction: column-reverse;
    }

    &.is-horizontal {
        flex-direction: row;

        &-reverse {
            flex-direction: row-reverse;
        }
    }

    &.is-centered {
        > .content {
            display: flex;
            > * {
                margin: auto;
            }
        }
    }

    &.is-deactivated {
        filter: grayscale(100%);

        > .content {
            overflow-y: hidden;
        }
    }

    &.is-padding-less {
        > .content {
            padding: 0;
        }
    }

    @each $label, $gap in _gaps(_var("layout", "gaps", ())) {
        &.is-#{$label}-padded {
            > .content {
                padding: $gap;
            }
        }
    }

    @each $device, $mq in _breakpoints() {
        @media #{$mq} {
            &.is-#{$device}-reverse {
                flex-direction: column-reverse;
            }

            &.is-#{$device}-horizontal {
                flex-direction: row;

                &-reverse {
                    flex-direction: row-reverse;
                }
            }

            &.is-#{$device}-padding-less {
                > .content {
                    padding: 0 !important;
                }
            }

            @each $label, $gap in _gaps(_var("layout", "gaps", ())) {
                &.is-#{$device}-#{$label}-padded {
                    > .content {
                        padding: $gap !important;
                    }
                }
            }
        }
    }
}
