/// calculate color brightness
///
/// @param {color} $color
/// @example $x: br(red);
@function br($color) {
    $e: type-check($color, "br", "color", "color");
    @return (red($color) + green($color) + blue($color)) / (255 * 3);
}

/// calculate brightness ratio to base color
///
/// @param {color} $base base color
/// @param {color} $color color to compare
/// @example $x: br-ratio(red, white);
@function br-ratio($base, $color) {
    $e: type-check($base, "br-ratio", "base", "color");
    $e: type-check($color, "br-ratio", "color", "color");
    @return abs(br($base) - br($color));
}

/// Compare colors for higher contrast
///
/// @param {color} $base
/// @param {color} $color1
/// @param {color} $color2
/// @example $x: contrast(red, white, black);
@function contrast($base, $color1, $color2) {
    $e: type-check($base, "contrast", "base", "color");
    $e: type-check($color1, "contrast", "color1", "color");
    $e: type-check($color2, "contrast", "color2", "color");
    @return if(
        br-ratio($base, $color1) > br-ratio($base, $color2),
        $color1,
        $color2
    );
}

///  Compare colors for lower contrast
///
/// @param {color} $base
/// @param {color} $color1
/// @param {color} $color2
/// @example $x: harmony(red, white, black);
@function harmony($base, $color1, $color2) {
    $e: type-check($base, "harmony", "base", "color");
    $e: type-check($color1, "harmony", "color1", "color");
    $e: type-check($color2, "harmony", "color2", "color");
    @return if(
        br-ratio($base, $color1) > br-ratio($base, $color2),
        $color2,
        $color1
    );
}

/// Get foreground for color
///
/// @param {color} $color
/// @example $x: foreground(red);
@function foreground($color) {
    $e: type-check($color, "foreground", "color", "color");
    @return contrast($color, mix(white, $color, 95%), mix(black, $color, 95%));
}

/// Get readable text version of color for background
///
/// @param {color} $color
/// @param {color} $background background color for get
/// @example $x: readable(red, white);
@function readable($color, $background) {
    $e: type-check($color, "foreground", "color", "color");
    $e: type-check($background, "foreground", "background", "color");
    $light: $color;
    @while br($light) < 0.6 {
        $light: palette($light, "400");
    }
    $dark: $color;
    @while br($dark) > 0.4 {
        $dark: palette($dark, "600");
    }
    @return contrast($background, $light, $dark);
}
